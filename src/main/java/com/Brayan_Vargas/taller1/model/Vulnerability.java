package com.Brayan_Vargas.taller1.model;

import java.io.Serializable;
import javax.persistence.*;
import java.util.List;


/**
 * The persistent class for the VULNERABILITY database table.
 * 
 */
@Entity
@NamedQuery(name="com.example.taller1.model.Vulnerability.findAll", query="SELECT v FROM Vulnerability v")
public class Vulnerability implements Serializable {
	private static final long serialVersionUID = 1L;

	@Id
	@SequenceGenerator(name="VULNERABILITY_VULNID_GENERATOR", sequenceName="VULNERABILITY_SEQ")
	@GeneratedValue(strategy=GenerationType.SEQUENCE, generator="VULNERABILITY_VULNID_GENERATOR")
	@Column(name="VULN_ID")
	private long vulnId;

	@Column(name="VULN_ISACTIVE")
	private String vulnIsactive;

	@Column(name="VULN_NAME")
	private String vulnName;

	//bi-directional many-to-one association to com.example.taller1.model.Vulnerabilitytype
	@ManyToOne
	@JoinColumn(name="VULNTYPE_VULNTYPE_ID")
	private Vulnerabilitytype vulnerabilitytype;

	//bi-directional many-to-one association to com.example.taller1.model.Vulnerabilityquestion
	@OneToMany(mappedBy="vulnerability")
	private List<Vulnerabilityquestion> vulnerabilityquestions;

	public Vulnerability() {
	}

	public long getVulnId() {
		return this.vulnId;
	}

	public void setVulnId(long vulnId) {
		this.vulnId = vulnId;
	}

	public String getVulnIsactive() {
		return this.vulnIsactive;
	}

	public void setVulnIsactive(String vulnIsactive) {
		this.vulnIsactive = vulnIsactive;
	}

	public String getVulnName() {
		return this.vulnName;
	}

	public void setVulnName(String vulnName) {
		this.vulnName = vulnName;
	}

	public Vulnerabilitytype getVulnerabilitytype() {
		return this.vulnerabilitytype;
	}

	public void setVulnerabilitytype(Vulnerabilitytype vulnerabilitytype) {
		this.vulnerabilitytype = vulnerabilitytype;
	}

	public List<Vulnerabilityquestion> getVulnerabilityquestions() {
		return this.vulnerabilityquestions;
	}

	public void setVulnerabilityquestions(List<Vulnerabilityquestion> vulnerabilityquestions) {
		this.vulnerabilityquestions = vulnerabilityquestions;
	}

	public Vulnerabilityquestion addVulnerabilityquestion(Vulnerabilityquestion vulnerabilityquestion) {
		getVulnerabilityquestions().add(vulnerabilityquestion);
		vulnerabilityquestion.setVulnerability(this);

		return vulnerabilityquestion;
	}

	public Vulnerabilityquestion removeVulnerabilityquestion(Vulnerabilityquestion vulnerabilityquestion) {
		getVulnerabilityquestions().remove(vulnerabilityquestion);
		vulnerabilityquestion.setVulnerability(null);

		return vulnerabilityquestion;
	}

}